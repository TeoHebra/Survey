:root {
  --max-width: 800px;
  --primary-color: #004d99;
  --secondary-color: #e6f0ff;
}

body {
  font-family: Arial, sans-serif;
  margin: 0;
  background: var(--secondary-color);
  display: flex;
  justify-content: center;
}

main#survey-container {
  width: 100%;
  max-width: var(--max-width);
  background: white;
  padding: 2rem;
  box-sizing: border-box;
  margin: 2rem;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.survey-block {
  display: none;
  flex-direction: column;
  gap: 1rem;
}
.survey-block.active {
  display: flex;
}

button {
  align-self: flex-end;
  padding: 0.6rem 1.2rem;
  border: none;
  border-radius: 4px;
  background: var(--primary-color);
  color: white;
  font-size: 1rem;
  cursor: pointer;
}
button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

textarea {
  width: 100%;
  min-height: 120px;
}

.likert-scale label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.ranking-list li {
  list-style: none;
  padding: 0.4rem 0.6rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 0.4rem;
  cursor: move;
  background: #fafafa;
}

.progress {
  width: 100%;
  background: #f1f1f1;
  height: 8px;
  border-radius: 4px;
  margin-bottom: 1rem;
  overflow: hidden;
}
.progress div {
  height: 100%;
  background: var(--primary-color);
  width: 0%;
  transition: width 0.3s ease;
}

/* ===================================================== */
/* === 7-point Likert Scale styling (consolidated) ===== */
/* ===================================================== */

fieldset.likert-7 {
  /* —— layout —— */
  --bullet-size: 16px;            /* visible dot diameter  */
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;        /* keep labels aligned */
  gap: 0.5rem;
  margin: 2rem 0;
  padding: 0 1rem;
  border: none;
}

/* horizontal guideline */
fieldset.likert-7::before {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: calc(var(--bullet-size) / 2 + 3px); /* centre of dot incl. 3-px border */
  height: 2px;
  background: #000;
  z-index: 0;                      /* place behind circles */
}

/* hide native radios */
fieldset.likert-7 input[type="radio"] {
  display: none;
}

/* —— label & bullet —— */
fieldset.likert-7 label {
  flex: 1 1 0;
  min-width: 0;
  margin: 0 .25rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  cursor: pointer;
  font-size: 0.9rem;
  line-height: 1.2;
  position: relative;
  z-index: 1;                      /* above guideline */
}

/* circle bullet */
fieldset.likert-7 label::before {
  content: '';
  width:  var(--bullet-size);
  height: var(--bullet-size);
  border: 3.5px solid #000;          /* thicker outline */
  border-radius: 50%;
  background: #fff;                /* masks guideline */
  margin: 0 auto 0.6rem;
  position: relative;
  z-index: 1;                      /* above guideline */
}

/* red X on selected option */
fieldset.likert-7 input[type="radio"]:checked + label::after {
  content: '✖';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2.0rem;               /* larger X */
  font-weight: 2000;                /* thicker stroke */
  line-height: 1;
  color: red;
  z-index: 2;                      /* topmost layer */
  pointer-events: none;
}
/* ---- centre the red X in the bullet ---- */
fieldset.likert-7 input[type="radio"]:checked + label::after {
  /* inner-radius (16 / 2)  + border (3)  = 11 px */
  top: calc(var(--bullet-size) / 2 + 3px);
}

/* ========================================= */
/* === BLOCK 3: Vignette Ranking Styles  === */
/* ========================================= */

/* ==============================================================
   Block 3 – Vignette Ranking Styles (arrows in black, bigger, text alignment)
   ============================================================== */

/* ─────────────────────────────────────────────────────────────────
   (1) CSS Variables – set box width, gap, and text‐alignment here:
───────────────────────────────────────────────────────────────── */
:root {
  /* Width of the input box */
  --box-width: 32px;

  /* Gap between the box and vignette text */
  --gap-between: 24px;

  /* Horizontal offset (in pixels) for the text inside the input.
     Positive → shift right; Negative → shift left. */
  --text-horizontal-offset: 0px;
}
/* ─────────────────────────────────────────────────────────────────
   Hide browser’s default number‐input spinners in Chrome/Safari/Edge
───────────────────────────────────────────────────────────────── */
#block3 .rank-input::-webkit-inner-spin-button,
#block3 .rank-input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

/* Hide Firefox’s default spinner */
#block3 .rank-input {
  -moz-appearance: textfield;
}

/* ─────────────────────────────────────────────────────────────────
   Wrapper so we can position our custom up/down arrows
───────────────────────────────────────────────────────────────── */
#block3 .number-wrapper {
  position: relative;
  display: inline-block;
}

/* ─────────────────────────────────────────────────────────────────
   Base styling for the number input
───────────────────────────────────────────────────────────────── */
#block3 .rank-input {
  width: var(--box-width);      /* box width from variable */
  padding: 8px;
  font-size: 1rem;
  text-align: var(--text-align-input); /* use the variable for alignment */

  /* Thicker black border, square corners */
  border: 3.5px solid #000000;
  border-radius: 0px;

  background-color: #ffffff;
  color: #000000;
}

/* ─────────────────────────────────────────────────────────────────
   Custom “up” arrow at top‐right of the input in BLACK and larger
───────────────────────────────────────────────────────────────── */
#block3 .number-wrapper .arrow.up {
  position: absolute;

  /* You may need to adjust these if you change padding or box‐height */
  top: 9px;      /* vertical offset from the top of the input */
  right: 7px;    /* horizontal offset from the right edge */

  /* Increase the “clickable” area and SVG size as needed */
  width: 12px;   /* arrow container width */
  height: 8px;   /* arrow container height */

  /* Larger black “up” triangle SVG (12×8 px) */
  background-image: url("data:image/svg+xml;utf8,\
    <svg xmlns='http://www.w3.org/2000/svg' width='12' height='8' viewBox='0 0 12 8'>\
      <polygon points='6,0 12,8 0,8' fill='%23000'/>\
    </svg>");
  background-repeat: no-repeat;
  background-size: 12px 8px;
  cursor: pointer;
}

/* ─────────────────────────────────────────────────────────────────
   Custom “down” arrow at bottom‐right of the input in BLACK and larger
───────────────────────────────────────────────────────────────── */
#block3 .number-wrapper .arrow.down {
  position: absolute;

  /* Match offsets to align with “up” arrow above */
  bottom: 9px;   /* vertical offset from the bottom of the input */
  right: 7px;    /* same horizontal offset */

  width: 12px;   /* arrow container width */
  height: 8px;   /* arrow container height */

  /* Larger black “down” triangle SVG (12×8 px) */
  background-image: url("data:image/svg+xml;utf8,\
    <svg xmlns='http://www.w3.org/2000/svg' width='12' height='8' viewBox='0 0 12 8'>\
      <polygon points='0,0 12,0 6,8' fill='%23000'/>\
    </svg>");
  background-repeat: no-repeat;
  background-size: 12px 8px;
  cursor: pointer;
}

/* ─────────────────────────────────────────────────────────────────
   On hover, slightly dim the arrow to indicate interactivity
───────────────────────────────────────────────────────────────── */
#block3 .number-wrapper .arrow.up:hover,
#block3 .number-wrapper .arrow.down:hover {
  opacity: 0.7;
}

/* ─────────────────────────────────────────────────────────────────
   Highlight duplicate inputs in a very obvious red
───────────────────────────────────────────────────────────────── */
#block3 .rank-input.duplicate {
  border: 4px solid #e74c3c !important;   /* thick red border */
  background-color: #ffebee !important;   /* pale red background */
  color: #b71c1c;                         /* dark red text */
}

/* ─────────────────────────────────────────────────────────────────
   Remove the grey “card” wrapper and place input on the left
   (use flex‐direction: row-reverse so input is on left, label on right)
───────────────────────────────────────────────────────────────── */
#block3 .ranking-item {
  display: flex;
  flex-direction: left; /* input on left, label on right */
  align-items: center;
  margin-bottom: 16px;

  background-color: transparent !important;
  border: none !important;

  /* thin bottom border as a separator */
  border-bottom: 1px solid #e0e0e0;
  padding-bottom: 8px;
  margin-bottom: 8px;
}

/* ─────────────────────────────────────────────────────────────────
   The vignette label sits to the right of the input; add spacing
───────────────────────────────────────────────────────────────── */
#block3 .ranking-item label {
  flex: 1;
  font-size: 1rem;
  color: #333333;

  margin-left: var(--gap-between); /* gap from the box */
}

/* ─────────────────────────────────────────────────────────────────
   Focus style for the input (blue outline + glow)
───────────────────────────────────────────────────────────────── */
#block3 .rank-input:focus {
  outline: none;
  border-color: #3b82f6; /* bright blue */
  box-shadow: 0 0 5px rgba(59,130,246,0.5);
}

/* ─────────────────────────────────────────────────────────────────
   Invalid state (empty or outside min/max) – optional
───────────────────────────────────────────────────────────────── */
#block3 .rank-input:invalid {
  border-color: #e74c3c;
  background-color: #fdecea;
}

/* ─────────────────────────────────────────────────────────────────
   Placeholder color
───────────────────────────────────────────────────────────────── */
#block3 .rank-input::placeholder {
  color: #999999;
}

/* ─────────────────────────────────────────────────────────────────
   Responsive: On small screens, stack each item vertically
───────────────────────────────────────────────────────────────── */
@media (max-width: 480px) {
  #block3 .ranking-item {
    flex-direction: column;
    align-items: stretch;
  }
  #block3 .ranking-item label {
    margin-left: 0;
    margin-bottom: 8px;
  }
  #block3 .ranking-item .number-wrapper {
    width: 100%;
  }
  #block3 .ranking-item .rank-input {
    width: 100%;
  }
}

#block3 .rank-input {
  /* ... your existing styles here ... */

  /* Example: make the number sit 6px away from the left edge */
  padding-left: 8px;  

  /* If you want to keep a bit of room on the right (for arrows), reduce right padding */
  padding-right: 0px;  

}


/* ========================================================
   2.1) Container styling for the whole Block 2 scale row
   ======================================================== */
.likert‐scale {
  max-width: 800px;
  margin: 40px auto;
  padding: 0 20px; /* small left/right padding */
  font-family: Arial, sans-serif;
}

.likert‐scale .scale‐title {
  font-size: 1.1rem;
  color: #333;
  margin-bottom: 16px;
  text-align: center; /* center‐align the title by default */
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.2) .scale‐row: draws the horizontal line + holds all circles   */
/* ─────────────────────────────────────────────────────────────── */
.scale‐row {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 0 auto 32px;    /* center the row, 32px bottom gap */
  padding: 0 10%;         /* leave 10% margin on left/right so circles aren’t flush to edges */
}

/* Draw the connecting horizontal line behind all the circles: */
.scale‐row::before {
  content: "";
  position: absolute;
  top: 50%;              /* vertically center the line relative to the circles */
  left: 0;
  right: 0;
  height: 2px;
  background-color: #333;
  transform: translateY(-50%);
  z-index: 0;            /* place it behind the circle‐labels */
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.3) .scale‐option: each “column” with a circle + text         */
/* ─────────────────────────────────────────────────────────────── */
.scale‐option {
  flex: 1 1 0;           /* each option gets equal width */
  display: flex;
  flex-direction: column;
  align-items: center;   /* center the circle + text under each other */
  position: relative;    /* so we can stack the circle above the line */
}

/* Hide the native radio input so only our custom circle shows */
.scale‐option input[type="radio"] {
  display: none;
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.4) The circle itself (the <label> acting as a custom radio)  */
/* ─────────────────────────────────────────────────────────────── */
.scale‐option label {
  display: block;
  width: 28px;           /* outer diameter of the circle */
  height: 28px;
  border: 3px solid #333;/* thick dark border */
  border-radius: 50%;    /* make it a perfect circle */
  background-color: #fff;/* white fill (or transparent, if you prefer) */
  position: relative;    /* so we can position the cross inside */
  z-index: 1;            /* above the horizontal line */
  cursor: pointer;
  transition: border-color 0.15s;
}

/* On hover, slightly darken the border to indicate interactivity */
.scale‐option label:hover {
  border-color: #000;
}

/* When the user clicks (focuses) the label, give it a tiny glow */
.scale‐option label:focus {
  outline: none;
  box-shadow: 0 0 4px rgba(0, 0, 0, 0.25);
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.5) Show a red “✖” inside the circle when its radio is checked */
/* ─────────────────────────────────────────────────────────────── */
.scale‐option input[type="radio"]:checked + label::after {
  content: "✖";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: red;
  font-size: 1.2rem;       /* fits nicely inside a 28px circle */
  line-height: 1;
  z-index: 2;             /* on top of everything */
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.6) The text label under each circle                           */
/* ─────────────────────────────────────────────────────────────── */
.scale‐option .option‐text {
  margin-top: 8px;
  font-size: 0.9rem;
  color: #333;
  text-align: center;
  max-width: 80px;        /* prevent overly wide labels */
  line-height: 1.2;
}

/* Allow the label text to wrap if needed (for long phrases) */
.scale‐option .option‐text {
  word-break: break-word;
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.7) Example: spacing between the circle and the horizontal line */
/* (Optional tweak if you want the circle to sit exactly on the line) */
/* ─────────────────────────────────────────────────────────────── */
/* By default, the 28px circle sits halfway on the 2px line (centered). 
   If you need to nudge it up or down, you can change this: */
.scale‐row .scale‐option label {
  /* e.g.  if you want the circle exactly centered, you can remove 
     any explicit top/transform settings. As written above it “just works.” 
     But if you want it 1px above the line for extra clarity, do: */
  /* transform: translateY(-1px); */
}

/* ─────────────────────────────────────────────────────────────── */
/* 2.8) (Optional) Make the labels’ font and spacing responsive:   */
/* ─────────────────────────────────────────────────────────────── */
@media (max-width: 600px) {
  .likert‐scale {
    padding: 0 10px;
  }
  .scale‐option .option‐text {
    font-size: 0.8rem;
    max-width: 60px;
  }
  .scale‐row {
    margin-bottom: 24px;
  }
}
