:root {
  --max-width: 800px;
  --primary-color: #004d99;
  --secondary-color: #e6f0ff;
}

body {
  font-family: Arial, sans-serif;
  margin: 0;
  background: var(--secondary-color);
  display: flex;
  justify-content: center;
}

main#survey-container {
  width: 100%;
  max-width: var(--max-width);
  background: white;
  padding: 2rem;
  box-sizing: border-box;
  margin: 2rem;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0,0,0,0.1);
}

.survey-block {
  display: none;
  flex-direction: column;
  gap: 1rem;
}
.survey-block.active {
  display: flex;
}

button {
  align-self: flex-end;
  padding: 0.6rem 1.2rem;
  border: none;
  border-radius: 4px;
  background: var(--primary-color);
  color: white;
  font-size: 1rem;
  cursor: pointer;
}
button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

textarea {
  width: 100%;
  min-height: 120px;
}

.likert-scale label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.ranking-list li {
  list-style: none;
  padding: 0.4rem 0.6rem;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin-bottom: 0.4rem;
  cursor: move;
  background: #fafafa;
}

.progress {
  width: 100%;
  background: #f1f1f1;
  height: 8px;
  border-radius: 4px;
  margin-bottom: 1rem;
  overflow: hidden;
}
.progress div {
  height: 100%;
  background: var(--primary-color);
  width: 0%;
  transition: width 0.3s ease;
}

/* ===================================================== */
/* === 7-point Likert Scale styling (consolidated) ===== */
/* ===================================================== */

fieldset.likert-7 {
  /* —— layout —— */
  --bullet-size: 16px;            /* visible dot diameter  */
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;        /* keep labels aligned */
  gap: 0.5rem;
  margin: 2rem 0;
  padding: 0 1rem;
  border: none;
}

/* horizontal guideline */
fieldset.likert-7::before {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  top: calc(var(--bullet-size) / 2 + 3px); /* centre of dot incl. 3-px border */
  height: 2px;
  background: #000;
  z-index: 0;                      /* place behind circles */
}

/* hide native radios */
fieldset.likert-7 input[type="radio"] {
  display: none;
}

/* —— label & bullet —— */
fieldset.likert-7 label {
  flex: 1 1 0;
  min-width: 0;
  margin: 0 .25rem;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  text-align: center;
  cursor: pointer;
  font-size: 0.9rem;
  line-height: 1.2;
  position: relative;
  z-index: 1;                      /* above guideline */
}

/* circle bullet */
fieldset.likert-7 label::before {
  content: '';
  width:  var(--bullet-size);
  height: var(--bullet-size);
  border: 3.5px solid #000;          /* thicker outline */
  border-radius: 50%;
  background: #fff;                /* masks guideline */
  margin: 0 auto 0.6rem;
  position: relative;
  z-index: 1;                      /* above guideline */
}

/* red X on selected option */
fieldset.likert-7 input[type="radio"]:checked + label::after {
  content: '✖';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 2.0rem;               /* larger X */
  font-weight: 2000;                /* thicker stroke */
  line-height: 1;
  color: red;
  z-index: 2;                      /* topmost layer */
  pointer-events: none;
}
/* ---- centre the red X in the bullet ---- */
fieldset.likert-7 input[type="radio"]:checked + label::after {
  /* inner-radius (16 / 2)  + border (3)  = 11 px */
  top: calc(var(--bullet-size) / 2 + 3px);
}

/* === Ranking‐list Drag-and-Drop Aesthetic === */

#rankingList {
  padding: 0;                 /* remove default UL padding */
  margin: 0;                  /* remove default UL margin */
}

.ranking-list li {
  position: relative;
  user-select: none;          /* disable text selection while dragging */
  cursor: grab;               /* “hand” icon */
  transition: background 0.2s ease;
}

/* When the user is dragging an item, fade it out slightly */
.ranking-list li.dragging {
  opacity: 0.5;
}

/* Add a subtle hover state */
.ranking-list li:hover {
  background: #f0f8ff;       /* very light blue */
}

/* Add a small “handle” icon on the left of each item (optional) */
/* If you prefer no icon, just skip this block. */
.ranking-list li::before {
  content: '≡';               /* “hamburger” lines as a drag handle */
  font-size: 1rem;
  position: absolute;
  left: 0.6rem;
  top: 50%;
  transform: translateY(-50%);
  color: #999;
  cursor: grab;
}

/* Add padding so text doesn’t overlap the handle icon */
.ranking-list li {
  padding: 0.6rem 1rem 0.6rem 2rem; 
}

/* Prevent the horizontal line from showing under the item’s text */
.ranking-list li::after {
  content: '';
  display: block;
  clear: both;
}

/* ================== Ranking List Enhancements ================== */

/* 1) Wrapper for scrollable list */
.ranking-wrapper {
  max-height: 300px;       /* adjust as needed */
  overflow-y: auto;        /* scroll if too tall */
  padding-right: 0.5rem;   /* space for scrollbar */
  margin-bottom: 1rem;
  border: 1px solid #ddd;
  border-radius: 6px;
}

/* 2) Each <li> becomes a flex row: [rank-badge] [text] [drag handle] */
.ranking-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.ranking-list li {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.75rem;
  border-bottom: 1px solid #eee;
  background: #fff;
  cursor: pointer;                 /* for click-to-rank */
  user-select: none;               /* avoid text selection during drag */
  position: relative;
  transition: background 0.15s ease;
}

.ranking-list li:last-child {
  border-bottom: none;
}

/* 3) Hover state */
.ranking-list li:hover {
  background: #f8faff;             /* very light blue */
}

/* 4) “Dragging” state (lower opacity) */
.ranking-list li.dragging {
  opacity: 0.4;
}

/* 5) Rank badge on the left */
.ranking-list .rank-number {
  display: inline-block;
  flex: 0 0 1.5rem;               /* fixed width for numbers */
  text-align: center;
  font-weight: bold;
  color: var(--primary-color);
  margin-right: 0.75rem;
  min-width: 1.5rem;
}

/* 6) Vignette text stretches to fill remaining space */
.ranking-list .item-text {
  flex: 1 1 auto;
  word-break: break-word;
}

/* 7) Drag-handle on the right (six dots) */
.ranking-list .drag-handle {
  flex: 0 0 auto;
  font-size: 1.2rem;
  color: #999;
  margin-left: 0.75rem;
  cursor: grab;                    /* user sees “grab” cursor */
}

/* 8) While dragging, change cursor into “grabbing” */
.ranking-list li:active .drag-handle {
  cursor: grabbing;
}

/* 9) Hide default list padding/spacing */
.ranking-list {
  padding-left: 0;
}

/* 10) Prevent the horizontal rule from splitting the text on scroll (if any) */
.ranking-list li::after {
  content: "";
  display: block;
  clear: both;
}

/* ============================ */
/* === Block 3 Ranking CSS === */
/* ============================ */

/* 1) The wrapping container for scrolling */
.ranking-wrapper {
  max-height: 300px;       /* adjust if you have more/less items */
  overflow-y: auto;
  border: 1px solid #ddd;
  border-radius: 6px;
  margin-bottom: 1rem;
  padding-right: 0.5rem;   /* space for native scrollbar */
}

/* 2) Reset list‐styling on the UL */
.ranking-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

/* 3) Each <li> is a flex row: [select] [text] [handle] */
.ranking-list li {
  display: flex;
  align-items: center;
  padding: 0.5rem 0.75rem;
  border-bottom: 1px solid #eee;
  background: #fff;
  position: relative;
  user-select: none;
}

/* Remove border under last item */
.ranking-list li:last-child {
  border-bottom: none;
}

/* 4) Hover & dragging states */
.ranking-list li:hover {
  background: #f8faff;           /* very pale blue on hover */
}

.ranking-list li.dragging {
  opacity: 0.4;                  /* fade while dragging */
}

/* 5) Style the <select> dropdown for rank */
.ranking-list .order-select {
  flex: 0 0 3rem;                /* fixed width for dropdown */
  margin-right: 0.75rem;
}

.ranking-list .order-select select {
  width: 100%;
  padding: 0.2rem 0.3rem;
  font-size: 1rem;
  border: 1px solid #bbb;
  border-radius: 4px;
  background: #fff;
  cursor: pointer;
}

/* 6) The actual vignette text (wraps if long) */
.ranking-list .item-text {
  flex: 1 1 auto;
  word-break: break-word;
}

/* 7) Drag handle “⋮⋮” on the right */
.ranking-list .drag-handle {
  flex: 0 0 auto;
  font-size: 1.4rem;
  color: #888;
  margin-left: 0.75rem;
  cursor: grab;                  /* “hand” icon */
  user-select: none;
}

/* While the user is holding the handle, change to grabbing */
.ranking-list li:active .drag-handle {
  cursor: grabbing;
}

/* 8) Prevent the horizontal rule from splitting text on scroll */
.ranking-list li::after {
  content: "";
  display: block;
  clear: both;
}

/* 9) Disable the “Next” button until user has interacted */
/*    (that’s already handled in the inline JS—no CSS needed here) */

