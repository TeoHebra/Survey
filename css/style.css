/* ===================================================
   1. Root variables
   =================================================== */
:root {
  --max-width: 720px;
  --primary-color: #000000; /* black */
  --secondary-color: #F7F9FC; /* very pale grey */

  --box-width: 32px;
  --gap-between: 24px;
  --text-horizontal-offset: 0px;
  --likert-mobile-spacing: 0.5rem;
}

/* ===================================================
   2. Base typography
   =================================================== */
html {
  font-family: "Inter", "Roboto", sans-serif;
  font-size: 16px;
  line-height: 1.0;
}

h1 {
  font-weight: 600;
  font-size: 1.35rem;
  margin-bottom: 0.75rem;
}

p {
  margin: 0.5rem 0 1rem;
  color: #374151;
}

/* ===================================================
   3. Page background & centering
   =================================================== */
body {
  margin: 0;
  background: var(--secondary-color);
  display: flex;
  justify-content: center;
}

/* ===================================================
   4. Progress bar
   =================================================== */
.progress-wrapper {
  width: 100%;
  margin-bottom: 1rem;
  text-align: center;
}

.progress {
  width: 100%;
  background: #f1f1f1;
  height: 6px;
  border-radius: 999px;
  overflow: hidden;
}

.progress > div {
  height: 100%;
  background: var(--primary-color);
  width: 0%;
  transition: width 0.3s ease;
}

.progress-info {
  margin-top: 0.5rem;
  font-size: 0.9rem;
  color: #555;
}

/* ===================================================
   5. White “card” container (the only card)
   =================================================== */
main#survey-container {
  width: 100%;
  max-width: var(--max-width);
  background: white;
  padding: 2rem;
  box-sizing: border-box;
  margin: 2rem auto;
  border-radius: 8px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* ===================================================
   6. Survey sections (hide/show)
   =================================================== */
.survey-block {
  display: none;
  flex-direction: column;
  gap: 0.4rem;
}
.survey-block.active {
  display: flex;
}

/* ===================================================
   7. Buttons (Next / Back / Start)
   =================================================== */
button {
  align-self: flex-end;
  padding: 0.6rem 1.2rem;
  border: none;
  border-radius: 8px;
  background: var(--primary-color);
  color: white;
  font-size: 1rem;
  cursor: pointer;
}
button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* **IF** you need a grey secondary “Back” button, add this: */
/*
button.secondary {
  background: transparent;
  border: 1px solid #ccc;
  color: #333;
}
*/

/* ===================================================
   8. Textarea
   =================================================== */
textarea {
  width: 100%;
  min-height: 120px;
}


/* ===========================
   Question text (p.statement)
   =========================== */
p.statement {
  font-size: 1.15rem;   /* ↑ Increase or decrease as desired */
  line-height: 1.0;      /* ↑ Adjust line‐height (optional) */
  margin: 0;             /* remove default top/bottom on p */
  margin-bottom: 0.0rem; /* if you want a little breathing below */
  color: #000000;        /* same color as your normal <p> (optional) */
}
/* =============================================
   Space between question text & the Likert scale
   ============================================= */
.likert-wrapper {
  margin-top: 0.0rem;  /* ↑ space above the circles (change to e.g. 0.5rem, 1rem, etc.) */
}
/* ===============================
   Space between one question-block and the next
   =============================== */
.question-block {
  margin-bottom: 1.5rem;  /* ↑ change to 1rem, 2rem, etc. as needed */
}


/* ===================================================
   9. Seven-point Likert scale (Block 2)
   =================================================== */
/* 1) Define two CSS variables for easy tweaking:
      --bullet-size: how big each circle is
      --label-gap:  vertical gap between circle and text
*/
fieldset.likert-7 {
  --bullet-size: 22px;   /* ← change this to 16px/20px/28px/etc. if you want bigger/smaller circles */
  --label-gap:    8px;   /* ← change this to control the gap between circle and label text */

  position: relative;
  display: flex;
  justify-content: space-between;   /* spread the 7 labels evenly left ↔ right */
  align-items: flex-start;          /* all labels “start” at the same top edge */
  padding-left: 1rem;   /* small left/right “margins” so the first/last circles don’t butt too hard against the edge */
  padding-right: 1rem;
  margin: 0rem 0;       /* optional vertical spacing around this block */
  border: none;         /* remove any default fieldset border */
}

/* 2) Draw the 2px black “track” through the center of every circle */
fieldset.likert-7::before {
  content: "";
  position: absolute;
  top: calc(var(--bullet-size));   /* half of the circle’s diameter + half again = exactly the circle’s center */
  left: 0;
  right: 0;
  height: 2px;
  background: #000;
  z-index: 0;     /* behind the circles */
}

/* 3) Hide the native radio buttons */
fieldset.likert-7 input[type="radio"] {
  display: none;
}

/* 4) Style each <label> so that it’s a vertical stack:
*/
fieldset.likert-7 label {
  flex: 1;                               /* each label takes up equal width */
  display: flex;
  flex-direction: column;                /* stack the circle above its text */
  align-items: center;                   /* center‐align circle + text */
  top: 0px;
  text-align: center;                    /* center the <small> under the circle */
  cursor: pointer;                       /* clicking anywhere on the label toggles the radio */
  position: relative;                    /* so we can absolutely‐position the ✖ inside the circle */
  z-index: 1;                            /* so the circle (and ✔/✖) sits above the black track */
  margin: 0 0.25rem;                     /* small horizontal breathing room between labels */
}

/* 5) Draw each circle using label::before */
fieldset.likert-7 label::before {
  content: "";
  width: var(--bullet-size);
  height: var(--bullet-size);
  border: 2px solid #000;
  border-radius: 50%;
  background: #fff;
  display: block;
  margin-bottom: var(--label-gap);
    /*
    */
}

/* 6) Show a red “✖” dead‐center inside the circle when its radio is checked */
fieldset.likert-7 input[type="radio"]:checked + label::after {
  content: "✖";
  position: absolute;
  left: 37px;
  top: 22.5px;
  transform: translate(-50%, -50%);
    /* Now the “✖” is perfectly centered horizontally & vertically inside the circle */
  font-size: calc(var(--bullet-size) * 1.8);
    /* slightly smaller than the circle’s diameter */
  color: darkgoldenrod;
  pointer-events: none;  /* so clicks still go to the label/radio */
  z-index: 2;          /* on top of everything else */
}

/* 7) Style the <small> inside each label so it sits below the circle */
fieldset.likert-7 label small {
  display: block;         /* ensure it’s on its own line, below the circle */
  font-size: 0.75rem;     /* tweak as desired */
  color: #555;            /* a slightly‐muted gray for your text */
  line-height: 1.2;       /* readable line‐height if your text wraps */
  
}

fieldset.likert-7 label span {
  position: relative;
  left: -5px;   /* push the label‐block 8px to the right */
}

  /* 6 ─ Likert scale: bigger circles & hit-area (builds on existing mobile rules) */
  fieldset.likert-7 { padding: 0; }
  fieldset.likert-7 label { padding: 10px 0; }      /* 44 px tap zone */
  fieldset.likert-7 label::before {
    width: 20px;
    height: 20px;
    border-width: 3px;
    margin: 0 12px 0 0;
  }



/* ===================================================
   10. Vignette Ranking (Block 3)
   =================================================== */

/* → No “.survey-block background” here!  Just number inputs & labels.  */

#block3 .rank-input::-webkit-inner-spin-button,
#block3 .rank-input::-webkit-outer-spin-button {
  -webkit-appearance: none;
  margin: 0;
}
#block3 .rank-input {
  -moz-appearance: textfield;
}

#block3 .number-wrapper {
  position: relative;
  display: inline-block;
}

#block3 .rank-input {
  width: var(--box-width);
  padding: 8px;
  font-size: 1rem;
  text-align: var(--text-align-input);
  border: 3.5px solid #000;
  border-radius: 0px;
  background-color: #fff;
  color: #000;
}

#block3 .number-wrapper .arrow.up {
  position: absolute;
  top: 9px;
  right: 7px;
  width: 12px;
  height: 8px;
  background-image: url("data:image/svg+xml;utf8,\
    <svg xmlns='http://www.w3.org/2000/svg' width='12' height='8' viewBox='0 0 12 8'>\
      <polygon points='6,0 12,8 0,8' fill='%23000'/>\
    </svg>");
  background-repeat: no-repeat;
  background-size: 12px 8px;
  cursor: pointer;
}

#block3 .number-wrapper .arrow.down {
  position: absolute;
  bottom: 9px;
  right: 7px;
  width: 12px;
  height: 8px;
  background-image: url("data:image/svg+xml;utf8,\
    <svg xmlns='http://www.w3.org/2000/svg' width='12' height='8' viewBox='0 0 12 8'>\
      <polygon points='0,0 12,0 6,8' fill='%23000'/>\
    </svg>");
  background-repeat: no-repeat;
  background-size: 12px 8px;
  cursor: pointer;
}

#block3 .number-wrapper .arrow.up:hover,
#block3 .number-wrapper .arrow.down:hover {
  opacity: 0.7;
}

#block3 .rank-input.duplicate {
  border: 4px solid #e74c3c !important;
  background-color: #ffebee !important;
  color: #b71c1c;
}

#block3 .ranking-item {
  display: flex;
  align-items: center;
  margin-bottom: 16px;
  background-color: transparent !important;
  border: none !important;
  border-bottom: 1px solid #e0e0e0;
  padding-bottom: 8px;
  margin-bottom: 8px;
}

#block3 .ranking-item label {
  flex: 1;
  font-size: 1rem;
  color: #333333;
  margin-left: var(--gap-between);
}

#block3 .rank-input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 5px rgba(59,130,246,0.5);
}

#block3 .rank-input:invalid {
  border-color: #e74c3c;
  background-color: #fdecea;
}

#block3 .rank-input::placeholder {
  color: #999999;
}


/* ===================================================
   11. Block 4: Novel? + Sliders (you deleted container above)
   =================================================== */

/* → Remove any prior `.survey-block { background-color: #fafafa; … }` */

/* 2) FLEX ROW: Novel? | Confidence | Wow effect */
.block-4-row {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: 24px;
  margin-bottom: 32px;
}

/* 3) NOVEL Group */
.novel-group {
  flex: 0 1 20%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.novel-group .group-label {
  font-weight: bold;
  font-size: 1rem;
  color: #444;
  margin-bottom: 8px;
}
.novel-option {
  display: flex;
  align-items: center;
  margin-bottom: 12px;
}
.novel-option input.novel-radio {
  display: none;
}
.novel-option label.novel-circle {
  position: relative;
  width: 16px;
  height: 16px;
  border: 3px solid #000;
  border-radius: 50%;
  background-color: #fff;
  cursor: pointer;
  transition: border-color 0.15s;
  display: flex;
  justify-content: center;
  align-items: center;
  margin-right: 8px;
}
.novel-option label.novel-circle:hover {
  border-color: #000;
}
.novel-option input.novel-radio:checked + label.novel-circle::after {
  content: "✖";
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: darkgoldenrod;
  font-size: 2rem;
  line-height: 1;
}
.novel-option .novel-text {
  font-size: 1.4rem;
  color: #222;
  user-select: none;
}

/* 4) SLIDER Groups */
.confidence-group,
.wow-group {
  flex: 0 1 38%;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.group-header {
  display: flex;
  align-items: baseline;
  margin-bottom: 8px;
}
.group-header .group-label {
  font-weight: bold;
  font-size: 1rem;
  color: #444;
  margin-right: 8px;
}
.group-header .slider-value {
  font-size: 1rem;
  font-weight: bold;
  color: #007BFF;
  margin-right: 4px;
}
.group-header .slider-max {
  font-size: 0.9rem;
  color: #666;
}
.slider-wrapper {
  width: 100%;
}

/* 5) Range Input + Tick Marks */
.slider-input {
  width: 100%;
  height: 28px;
  background: transparent;
  -webkit-appearance: none;
  margin: 0;
}
.slider-input:focus {
  outline: none;
}
.slider-input::-webkit-slider-runnable-track {
  height: 6px;
  background: #ddd;
  border-radius: 3px;
}
.slider-input::-moz-range-track {
  height: 6px;
  background: #ddd;
  border-radius: 3px;
}
.slider-input::-ms-track {
  height: 6px;
  background: #ddd;
  border-radius: 3px;
  color: transparent;
}
.slider-input::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 24px;
  height: 24px;
  background: #222;
  border: 3px solid #fff;
  border-radius: 50%;
  margin-top: -9px;
  cursor: pointer;
}
.slider-input::-moz-range-thumb {
  width: 24px;
  height: 24px;
  background: #222;
  border: 3px solid #fff;
  border-radius: 50%;
  cursor: pointer;
}
.slider-input::-ms-thumb {
  width: 24px;
  height: 24px;
  background: #222;
  border: 3px solid #fff;
  border-radius: 50%;
  cursor: pointer;
}
.slider-input::-webkit-slider-runnable-track {
  background: #ddd;
}
.slider-input::-moz-range-progress {
  background: transparent;
}
.slider-input::-moz-range-ticks {
  color: #888;
}
.slider-input::-ms-ticks-after {
  color: #888;
}

/* 6) Navigation Buttons */
.nav-buttons {
  display: flex;
  justify-content: space-between;
  margin-top: 24px;
}
.nav-buttons button {
  padding: 8px 16px;
  font-size: 1rem;
  background-color: #007BFF;
  color: #fff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}
.nav-buttons button:hover {
  background-color: #0056b3;
}


/* Brand‐enhanced slider fill (Chrome/Firefox/IE) */
.slider-input::-webkit-slider-runnable-track {
  height: 6px;
  background: linear-gradient(
    to right,
    #0057D9 var(--slider-fill, 50%),
    #ddd var(--slider-fill, 50%)
  );
  border-radius: 3px;
}
.slider-input::-moz-range-track {
  height: 6px;
  background: #ddd;
  border-radius: 3px;
}
.slider-input::-moz-range-progress {
  background-color: #0057D9;
  height: 6px;
  border-radius: 3px;
}
.slider-input::-ms-fill-lower {
  background-color: #0057D9;
}
.slider-input::-ms-fill-upper {
  background-color: #ddd;
}


/* ──────────────────────────────────────────────── */
/* MOBILE OPTIMISATION (≤ 600 px)                  */
/* append this at the very end of the file         */
/* ──────────────────────────────────────────────── */
@media (max-width: 600px) {
  /* 1 ─ Card becomes edge-to-edge */
  main#survey-container {
    margin: 0;
    border-radius: 0;
    box-shadow: none;
    padding: 16px;               /* tighter internal padding */
  }
  /* 2 ─ Typography slightly smaller but looser line-height */
  html { font-size: 15px; line-height: 1.1; }

  .progress-wrapper {
    display: flex;
    align-items: center;
    gap: 16px;               /* small gap between bar & text */
    margin-bottom: 1rem;    /* keep a bit of breathing room */
  }

  /* B) Make the bar thinner & flexible */
  .progress {
    flex: 1;                /* allow bar to fill all leftover width */
    height: 12px;            /* a slightly thinner bar on phone */
    background: #f1f1f1;    /* light‐grey track */
    border-radius: 4px;     /* rounded ends */
    overflow: hidden;
  }

  /* The inner fill (black) */
  .progress-fill {
    height: 100%;
    background: #000;       /* black (same as --primary-color) */
    width: 0%;              /* updated by JS as user advances */
    transition: width 0.3s ease;
  }

  /* C) Two‐line progress text, stacked vertically */
.progress-info {
  position: relative;
  bottom: 3px;          /* shift the text down by 4px (tweak as needed) */
  font-size: 0.80rem;
  color: #555;
  white-space: nowrap;
  /* remove any line-height or flex rules you added earlier */
}


  /* Optional: add a little letter‐spacing to “Step X of Y” */
  .progress-step {
    font-weight: 500;
  }

  /* (You can tweak margin/padding as you like) */
  .progress-time {
    margin-top: 2px;        /* small gap between lines */
  }

  /* ────────────────────────────────────────────────── */
  /* D) If you originally had `.progress > div` as the fill, */
  /*    just ensure you now target `.progress-fill` instead.  */
  /* ────────────────────────────────────────────────── */

}
  /* 4 ─ Sticky nav footer with thumb-friendly buttons */
  .nav-buttons {
    position: sticky;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 900;
    background: #fff;
    padding: 12px 16px;
    box-shadow: 0 -1px 3px rgba(0,0,0,.08);
  }
  .nav-buttons button {
    flex: 1 1 50%;
    padding: 14px 0;
    font-size: 1rem;
    border-radius: 6px;
  }
  .nav-buttons button:first-child { margin-right: 8px; }
  /* 5 ─ Textarea grows to a comfortable height */
  textarea { min-height: 34vh; }

  /* 8 ─ Block 4 stacks vertically (extra safety) */
  .block-4-row { flex-direction: column; gap: 24px; }
  .slider-input::-webkit-slider-thumb,
  .slider-input::-moz-range-thumb {
    width: 28px; height: 28px; margin-top: -11px;   /* easier to grab */
  }
}

/* ────────────────────────────────────────────────
   MOBILE FIX: center the “✖” inside the circle
   only when viewport ≤ 600px
   ──────────────────────────────────────────────── */
@media (max-width: 600px) {
  /* (1) Ensure --bullet-size is 20px on mobile: */
  fieldset.likert-7 {
    --bullet-size: 22px;
    /* (you already have label::before { width:20px; height:20px; } somewhere above) */
  }

  /* (2) Add vertical padding to each <label> so there’s a bigger tap‐area: */
  fieldset.likert-7 label {
    padding: 10px 0;  /* ← your existing mobile rule */
  }

  /* (3) Override the “✖” position when a radio is checked: */
  fieldset.likert-7 input[type="radio"]:checked + label::after {
    /*  horizontal centering inside the label: */
    left: 37%;
    transform: translateX(-50%);
    /*  calculate vertical so X sits exactly in the middle of the 20px circle + 10px top padding: */
    top: calc(12px + (var(--bullet-size) / 2));
    /*  keep the same translateY(-50%) if you want a little vertical insurance: */
    transform: translate(-50%, -50%);
    /*  font‐size stays as-is from your existing rule (≈20px * 1.8) */
  }
}

/* ──────────────────────────────────────────────────────────
   RESPONSIVE LIKERT SCALE (≤ 600px)
   ────────────────────────────────────────────────────────── */
@media (max-width: 600px) {
  /* 1) Shrink the bullet size a bit more (down from 20px → 16px).
        Adjust this value if you still see overflow. */
  fieldset.likert-7 {
    --bullet-size: 16px;
    /* Remove any extra left/right padding so the circles can hug the edges: */
    padding-left: 0.5rem;   /* instead of 1rem */
    padding-right: 0.5rem;  /* instead of 1rem */
  }

  /* 2) Tighten up the gap between each label. */
  fieldset.likert-7 label {
    margin: 0 0.1rem;   /* instead of 0 0.25rem */
  }

  /* 3) Make the tiny “small” text under each circle scale down (so it never wraps). */
  fieldset.likert-7 label small {
    font-size: 0.6rem;  /* down from 0.75rem */
    line-height: 1.1;   /* keep it a bit tighter */
  }

  /* 4) Force the ::before circle itself to shrink to 16×16 px. */
  fieldset.likert-7 label::before {
    width: var(--bullet-size);   /* now 16px */
    height: var(--bullet-size);  /* now 16px */
    border-width: 2px;           /* thinner border to match smaller circle */
    margin-bottom: 0.4rem;       /* guard a small gap (0.4rem ≈ 6px) */
  }

  /* 5) Re-center the “✖” in the smaller 16px circle exactly as before. */
  fieldset.likert-7 input[type="radio"]:checked + label::after {
    /* top = 10px (label-padding) + 8px (half of 16px) = 18px from label-top */
    top: 20px;  /* 10 + (16/2) = 18px */
    left: 38%;
    transform: translate(-50%, -50%);
    font-size: calc(var(--bullet-size) * 1.8);  /* 16 × 1.8 = 28.8px */
  }

  /* 6) Slide the black track line so it also bisects the new 16px bubbles. */
  fieldset.likert-7::before {
    top: 29%;  /* 10 + (16/2) = 18px */
    height: 2px;       /* keep it 2px tall */
  }
}


